<?xml version="1.0" encoding="UTF-8"?>

<!--
  ~ Copyright 2016 Red Hat, Inc.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~   http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>org.overbaard</groupId>
    <artifactId>overbaard-parent</artifactId>
    <version>1.0.0.Beta6-SNAPSHOT</version>
    <packaging>pom</packaging>
    <organization>
        <url>https://github.com/overbaard/overbaard</url>
    </organization>
    <name>Overb√•rd Parent</name>
    <description>Nicer views on the Jira Agile boards</description>

    <licenses>
        <license>
            <name>Apache License 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
            <distribution>repo</distribution>
        </license>
    </licenses>


    <properties>
        <!-- versions -->
        <version.amps>8.0.2</version.amps>
        <version.atlassian.greenhopper>7.5.0-DAILY20170902071651</version.atlassian.greenhopper>
        <version.atlassian.spring.scanner>1.2.13</version.atlassian.spring.scanner>
        <version.atlassian.templaterenderer>1.5.6</version.atlassian.templaterenderer>
        <version.atlassian.activeobjects>0.28.7</version.atlassian.activeobjects>
        <version.atlassian.sal-api>2.11.6</version.atlassian.sal-api>
        <version.gson>2.2.2-atlassian-1</version.gson>
        <version.httpcomponents>4.5.2</version.httpcomponents>
        <version.javax.inject>1</version.javax.inject>
        <version.javax.jsr311-api>1.1.1</version.javax.jsr311-api>
        <version.javax.servlet-api>2.4</version.javax.servlet-api>
        <version.jboss-dmr>1.3.0.Final</version.jboss-dmr>
        <version.jira>7.5.0</version.jira>
        <version.junit>4.10</version.junit>
        <version.mockito>1.10.19</version.mockito>
        <version.plugin.testrunner>1.2.3</version.plugin.testrunner>
        <version.slf4j>1.6.6</version.slf4j>
        <version.spring>2.5.4</version.spring>
        <!-- TestKit version 6.x for JIRA 6.x -->
        <version.testkit>6.3.11</version.testkit>

        <!-- My plugin versions -->
        <version.frontend-maven-plugin>1.6</version.frontend-maven-plugin>
        <version.resources-plugin>3.0.2</version.resources-plugin>
        <version.clean-plugin>3.0.0</version.clean-plugin>
        <version.checkstyle.plugin>3.0.0</version.checkstyle.plugin>
        <version.checkstyle>8.18</version.checkstyle>

        <!-- Node and Yarn versions -->
        <version.yarn>v1.13.0</version.yarn>
        <version.node>v11.10.0</version.node>


        <!-- This key is used to keep the consistency between the key in atlassian-plugin.xml and the key to generate bundle. -->
        <atlassian.plugin.key>${project.groupId}.${project.artifactId}</atlassian.plugin.key>

        <!-- JDK version -->
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <!-- Source encoding -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    </properties>


    <dependencies>
        <dependency>
            <groupId>com.atlassian.jira</groupId>
            <artifactId>jira-api</artifactId>
            <version>${version.jira}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring</artifactId>
            <version>${version.spring}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.atlassian.plugin</groupId>
            <artifactId>atlassian-spring-scanner-annotation</artifactId>
            <version>${version.atlassian.spring.scanner}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.atlassian.plugin</groupId>
            <artifactId>atlassian-spring-scanner-runtime</artifactId>
            <version>${version.atlassian.spring.scanner}</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>javax.inject</groupId>
            <artifactId>javax.inject</artifactId>
            <version>${version.javax.inject}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.atlassian.templaterenderer</groupId>
            <artifactId>atlassian-template-renderer-api</artifactId>
            <version>${version.atlassian.templaterenderer}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.atlassian.activeobjects</groupId>
            <artifactId>activeobjects-plugin</artifactId>
            <version>${version.atlassian.activeobjects}</version>
            <scope>provided</scope>
        </dependency>
        <!-- SAL, the Active Objects plugin uses SAL's API for transactions -->
        <dependency>
            <groupId>com.atlassian.sal</groupId>
            <artifactId>sal-api</artifactId>
            <version>${version.atlassian.sal-api}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss</groupId>
            <artifactId>jboss-dmr</artifactId>
            <version>${version.jboss-dmr}</version>
        </dependency>
        <dependency>
            <groupId>com.atlassian.jira.plugins</groupId>
            <artifactId>jira-greenhopper-plugin</artifactId>
            <version>${version.atlassian.greenhopper}</version>
            <scope>provided</scope>
        </dependency>


        <!-- Add dependency on jira-core if you want access to JIRA implementation classes as well as the sanctioned API. -->
        <!-- This is not normally recommended, but may be required eg when migrating a plugin originally developed against JIRA 4.x -->
        <!--
        <dependency>
            <groupId>com.atlassian.jira</groupId>
            <artifactId>jira-core</artifactId>
            <version>${jira.version}</version>
            <scope>provided</scope>
        </dependency>
        -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${version.junit}</version>
            <scope>test</scope>
        </dependency>

        <!-- WIRED TEST RUNNER DEPENDENCIES -->
        <dependency>
            <groupId>com.atlassian.plugins</groupId>
            <artifactId>atlassian-plugins-osgi-testrunner</artifactId>
            <version>${version.plugin.testrunner}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>javax.ws.rs</groupId>
            <artifactId>jsr311-api</artifactId>
            <version>${version.javax.jsr311-api}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>${version.gson}</version>
        </dependency>
        <!-- Uncomment to use TestKit in your project. Details at https://bitbucket.org/atlassian/jira-testkit -->
        <!-- You can read more about TestKit at https://developer.atlassian.com/display/JIRADEV/Plugin+Tutorial+-+Smarter+integration+testing+with+TestKit -->
        <!--
		<dependency>
			<groupId>com.atlassian.jira.tests</groupId>
			<artifactId>jira-testkit-client</artifactId>
			<version>${testkit.version}</version>
			<scope>test</scope>
		</dependency>
		-->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
            <version>${version.javax.servlet-api}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${version.slf4j}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>${version.httpcomponents}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.atlassian.jira</groupId>
            <artifactId>jira-tests</artifactId>
            <version>${version.jira}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
            <version>${version.mockito}</version>
            <scope>test</scope>
        </dependency>


    </dependencies>
    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>com.atlassian.maven.plugins</groupId>
                    <artifactId>jira-maven-plugin</artifactId>
                    <version>${version.amps}</version>
                    <extensions>true</extensions>
                    <configuration>
                        <productVersion>${version.jira}</productVersion>
                        <productDataVersion>${version.jira}</productDataVersion>
                        <!-- Uncomment to install TestKit backdoor in JIRA. -->
                        <!--
                        <pluginArtifacts>
                            <pluginArtifact>
                                <groupId>com.atlassian.jira.tests</groupId>
                                <artifactId>jira-testkit-plugin</artifactId>
                                <version>${testkit.version}</version>
                            </pluginArtifact>
                        </pluginArtifacts>
                        -->
                        <enableQuickReload>true</enableQuickReload>
                        <instructions>
                            <Atlassian-Plugin-Key>${atlassian.plugin.key}</Atlassian-Plugin-Key>
                            <!-- Add package to export here -->
                            <Export-Package>org.overbaard.jira.api,</Export-Package>
                            <!-- Add package import here -->
                            <Import-Package>org.springframework.osgi.*;resolution:="optional",
                                org.eclipse.gemini.blueprint.*;resolution:="optional", *
                            </Import-Package>
                            <!-- Ensure plugin is spring powered - see https://extranet.atlassian.com/x/xBS9hQ  -->
                            <Spring-Context>*</Spring-Context>
                        </instructions>

                        <!-- TODO Get rid of this (compression causes some problems I don't want to look at now) -->
                        <compressResources>false</compressResources>
                        <jvmArgs>-Xms1g -Xmx2g -XX:MaxPermSize=1g -XX:-UseGCOverheadLimit -server</jvmArgs>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>com.atlassian.plugin</groupId>
                    <artifactId>atlassian-spring-scanner-maven-plugin</artifactId>
                    <version>${version.atlassian.spring.scanner}</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>atlassian-spring-scanner</goal>
                            </goals>
                            <phase>process-classes</phase>
                        </execution>
                    </executions>
                    <configuration>
                        <scannedDependencies>
                            <dependency>
                                <groupId>com.atlassian.plugin</groupId>
                                <artifactId>atlassian-spring-scanner-external-jar</artifactId>
                            </dependency>
                        </scannedDependencies>
                        <verbose>false</verbose>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-checkstyle-plugin</artifactId>
                    <version>${version.checkstyle.plugin}</version>
                    <dependencies>
                        <dependency>
                            <groupId>com.puppycrawl.tools</groupId>
                            <artifactId>checkstyle</artifactId>
                            <version>${version.checkstyle}</version>
                            <exclusions>
                                <exclusion>
                                    <groupId>com.sun</groupId>
                                    <artifactId>tools</artifactId>
                                </exclusion>
                            </exclusions>
                        </dependency>
                    </dependencies>
                    <executions>
                        <execution>
                            <id>check-style</id>
                            <phase>compile</phase>
                            <goals>
                                <goal>checkstyle</goal>
                            </goals>
                            <configuration>
                                <configLocation>${project.build.outputDirectory}/checkstyle.xml</configLocation>
                                <consoleOutput>true</consoleOutput>
                                <failsOnError>true</failsOnError>
                                <includeTestSourceDirectory>true</includeTestSourceDirectory>
                                <useFile></useFile>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <!-- Used to bundle the front-end build -->
                <plugin>
                    <groupId>com.github.eirslett</groupId>
                    <artifactId>frontend-maven-plugin</artifactId>
                    <!-- Use the latest released version:
                    https://repo1.maven.org/maven2/com/github/eirslett/frontend-maven-plugin/ -->
                    <version>${version.frontend-maven-plugin}</version>
<!--
                    <configuration>
                        <workingDirectory>webapp</workingDirectory>
                    </configuration>
-->
                </plugin>
                <plugin>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>${version.clean-plugin}</version>
                    <!--
                    <executions>
                        <execution>
                            <id>copy-resources</id>
                            &lt;!&ndash; here the phase you need &ndash;&gt;
                            <phase>process-resources</phase>
                            <goals>
                                <goal>clean</goal>
                            </goals>
                            <configuration>
                                <excludeDefaultDirectories>true</excludeDefaultDirectories>
                                <filesets>
                                    <fileset>
                                        <directory>${basedir}/target/classes/webapp</directory>
                                        <includes>
                                            <include>*.js</include>
                                            <include>*.js.map</include>
                                            <include>*.html</include>
                                            <include>*.ico</include>
                                        </includes>
                                    </fileset>
                                </filesets>
                            </configuration>
                        </execution>
                    </executions>-->
                </plugin>
                <plugin>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>${version.resources-plugin}</version>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>com.atlassian.maven.plugins</groupId>
                <artifactId>jira-maven-plugin</artifactId>
                <version>${version.amps}</version>
                <extensions>true</extensions>
                <configuration>
                    <productVersion>${version.jira}</productVersion>
                    <productDataVersion>${version.jira}</productDataVersion>
                    <!-- Uncomment to install TestKit backdoor in JIRA. -->
                    <!--
					<pluginArtifacts>
						<pluginArtifact>
							<groupId>com.atlassian.jira.tests</groupId>
							<artifactId>jira-testkit-plugin</artifactId>
							<version>${testkit.version}</version>
						</pluginArtifact>
					</pluginArtifacts>
					-->
                    <enableQuickReload>true</enableQuickReload>
                    <instructions>
                        <Atlassian-Plugin-Key>${atlassian.plugin.key}</Atlassian-Plugin-Key>
                        <!-- Add package to export here -->
                        <Export-Package>org.overbaard.jira.api,</Export-Package>
                        <!-- Add package import here -->
                        <Import-Package>org.springframework.osgi.*;resolution:="optional",
                            org.eclipse.gemini.blueprint.*;resolution:="optional", *
                        </Import-Package>
                        <!-- Ensure plugin is spring powered - see https://extranet.atlassian.com/x/xBS9hQ  -->
                        <Spring-Context>*</Spring-Context>
                    </instructions>

                    <!-- TODO Get rid of this (compression causes some problems I don't want to look at now) -->
                    <compressResources>false</compressResources>
                    <jvmArgs>-Xms1g -Xmx2g -XX:MaxPermSize=1g -XX:-UseGCOverheadLimit -server</jvmArgs>
                </configuration>
            </plugin>
            <plugin>
                <groupId>com.atlassian.plugin</groupId>
                <artifactId>atlassian-spring-scanner-maven-plugin</artifactId>
                <version>${version.atlassian.spring.scanner}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>atlassian-spring-scanner</goal>
                        </goals>
                        <phase>process-classes</phase>
                    </execution>
                </executions>
                <configuration>
                    <scannedDependencies>
                        <dependency>
                            <groupId>com.atlassian.plugin</groupId>
                            <artifactId>atlassian-spring-scanner-external-jar</artifactId>
                        </dependency>
                    </scannedDependencies>
                    <verbose>false</verbose>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>3.0.0</version>
                <dependencies>
                    <dependency>
                        <groupId>com.puppycrawl.tools</groupId>
                        <artifactId>checkstyle</artifactId>
                        <version>${version.checkstyle}</version>
                        <exclusions>
                            <exclusion>
                                <groupId>com.sun</groupId>
                                <artifactId>tools</artifactId>
                            </exclusion>
                        </exclusions>
                    </dependency>
                </dependencies>
                <executions>
                    <execution>
                        <id>check-style</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>checkstyle</goal>
                        </goals>
                        <configuration>
                            <configLocation>${project.build.outputDirectory}/checkstyle.xml</configLocation>
                            <consoleOutput>true</consoleOutput>
                            <failsOnError>true</failsOnError>
                            <includeTestSourceDirectory>true</includeTestSourceDirectory>
                            <useFile></useFile>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.github.eirslett</groupId>
                <artifactId>frontend-maven-plugin</artifactId>
                <!-- Use the latest released version:
                https://repo1.maven.org/maven2/com/github/eirslett/frontend-maven-plugin/ -->
                <version>${version.frontend-maven-plugin}</version>
            </plugin>
<!--            <plugin>
                <artifactId>maven-clean-plugin</artifactId>
                <version>${version.clean-plugin}</version>
                <executions>
                    <execution>
                        <id>copy-resources</id>
                        &lt;!&ndash; here the phase you need &ndash;&gt;
                        <phase>process-resources</phase>
                        <goals>
                            <goal>clean</goal>
                        </goals>
                        <configuration>
                            <excludeDefaultDirectories>true</excludeDefaultDirectories>
                            <filesets>
                                <fileset>
                                    <directory>${basedir}/target/classes/webapp</directory>
                                    <includes>
                                        <include>*.js</include>
                                        <include>*.js.map</include>
                                        <include>*.html</include>
                                        <include>*.ico</include>
                                    </includes>
                                </fileset>
                            </filesets>
                        </configuration>
                    </execution>
                </executions>
            </plugin>-->
<!--            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <version>${version.resources-plugin}</version>
                <executions>
                    <execution>
                        <id>copy-resources</id>
                        &lt;!&ndash; here the phase you need &ndash;&gt;
                        <phase>process-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${basedir}/target/classes/webapp</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>webapp/dist</directory>
                                    &lt;!&ndash; TODO exclude the rest/ directory &ndash;&gt;
                                    <filtering>false</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>-->
        </plugins>
    </build>

    <modules>
        <module>webapp</module>
        <module>jira</module>
    </modules>
</project>
